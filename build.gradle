ext {
    baseName = 'kafka-to-avro-writer'
    guavaVersion = '22.0'
    logstashVersion = '4.11'
    logbackVersion = '1.2.3'
    beamVersion = '2.19.0'
    commonsLangVersion = '3.5'
    confluentVersion = '3.2.1'
    kafkaVersion = '1.0.1'

    /** tests **/
    junitVersion = '4.12'
    assertJVersion = '3.8.0'
    mockitoVersion = '1.10.19'
    hamcrestVersion = '1.3'
    commonsIoVersion = '2.5'
    embeddedKafkaVersion = '2.1.7.RELEASE'
}

buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "com.commercehub.gradle.plugin:gradle-avro-plugin:0.13.0"
        classpath "org.hibernate.build.gradle:gradle-maven-publish-auth:2.0.1"
        classpath "net.researchgate:gradle-release:2.5.0"
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.0"
    }
}

apply plugin: "com.commercehub.gradle.plugin.avro"
apply plugin: 'java'
apply plugin: 'project-report'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'maven-publish'
apply plugin: 'maven-publish-auth'
apply plugin: 'net.researchgate.release'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'jacoco'

group = 'com.azimo'
sourceCompatibility = 1.8
targetCompatibility = 1.8
mainClassName = 'com.azimo.kafka.to.avro.writer.KafkaToAvroWriterApp'

dependencies {
    /** external libs **/
    compile group: 'org.apache.beam', name: 'beam-sdks-java-core', version: "${beamVersion}"
    compile group: 'org.apache.beam', name: 'beam-sdks-java-io-google-cloud-platform', version: "${beamVersion}"
    compile group: 'org.apache.beam', name: 'beam-runners-google-cloud-dataflow-java', version: "${beamVersion}"
    /** direct runner is only used to run pipeline locally **/
    compile group: 'org.apache.beam', name: 'beam-runners-direct-java', version: "${beamVersion}"
    compile group: 'org.apache.beam', name: 'beam-sdks-java-io-kafka', version: "${beamVersion}"
    compile group: 'io.confluent', name: 'kafka-avro-serializer', version: "${confluentVersion}"
    compile group: 'org.apache.kafka', name: 'kafka-clients', version: "${kafkaVersion}"
    compile group: 'com.google.guava', name: 'guava', version: "${guavaVersion}"
    compile group: 'ch.qos.logback', name: 'logback-classic', version: "${logbackVersion}"
    compile group: 'ch.qos.logback', name: 'logback-core', version: "${logbackVersion}"
    compile group: 'org.apache.commons', name: 'commons-lang3', version: "${commonsLangVersion}"

    /** tests **/
    testCompile group: 'junit', name: 'junit', version: "${junitVersion}"
    testCompile group: 'org.mockito', name: 'mockito-core', version: "${mockitoVersion}"
    testCompile group: 'com.github.tomakehurst', name: 'wiremock', version: '2.14.0'
    testCompile group: 'org.apache.beam', name: 'beam-runners-direct-java', version: "${beamVersion}"
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: "${hamcrestVersion}"
    testCompile group: 'commons-io', name: 'commons-io', version: "${commonsIoVersion}"
    testCompile group: 'org.assertj', name: 'assertj-core', version: "${assertJVersion}"
    testCompile("org.springframework.kafka:spring-kafka-test:${embeddedKafkaVersion}")
}

shadowJar {
    baseName = "${project.baseName}"
    manifest {
        attributes("Implementation-Version": version)
    }
    classifier = ""
}

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "http://packages.confluent.io/maven/" }
}

configurations {
    compile.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
}

task wrapper(type: Wrapper) { gradleVersion = '4.0' }